<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
/>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
{% assign selected_variant = product.selected_or_first_available_variant %}

<style>

    #judgeme_product_reviews {
      padding-left: 10px;
      padding-right: 10px;
    }
    @media (min-width: 768px) {
    #judgeme_product_reviews {
      padding-left: 30px;
      padding-right: 30px;
    }
  }

  .swiper-container.main-swiper .swiper-slide {
    position: relative;
    height: 100%;
}

.swiper-container.main-swiper .swiper-slide img {
    width: 100%;
    height: 100%;
    display: block;
    object-fit: contain;
}

.swiper-container.main-swiper .swiper-slide-active {
    z-index: 10;
    opacity: 1;
}

.swiper-container.main-swiper .swiper-slide:not(.swiper-slide-active) {
    z-index: 1;
    opacity: 0;
}

.swiper-container.thumb-swiper {
    width: 70%;
    height: auto;
}

.swiper-slide {
    display: flex;
    
    justify-content: center;
    align-items: center;
}

.thumb-swiper .swiper-slide {
    opacity: 0.5;
   }

@media only screen and (max-width: 640px) {
    .thumb-swiper .swiper-slide img {
        width: 100%;
        height: auto;
        max-height: 50px; /* Apply this only on smaller screens */
    }
}

.thumb-swiper .swiper-slide-thumb-active {
    opacity: 1;
    border: 2px solid #111827; /* Optional: Highlight the active thumbnail */
}
    .product--information { height: fit-content; }
     .variant-label {
            display: inline-block;
            border: 1px solid #ccc;
            cursor: pointer;
            margin-right: 5px;
            border-radius: 10px;
            transition: background-color 0.3s ease;
        }
        
        .variant-label:hover {
            background-color: #fbc00d;
            opacity: 0.8;
        }

        .variant-label input[type="radio"]:checked + .variant-text {
            background-color: #fbc00d;
            color: black;
            border-radius: 10px;
        }
        .variant-text {
            display: block;
            font-size: medium;
            font-weight: 700;
            padding: 6px 12px;
            }
</style>

<div class=" mx-auto my-8 md:mt-8 sm:mb-0" x-data="{ showMoreInfo: false, showDelivery: false }">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
        <div class="product--medias">
            <div class="bg-[#a7c248]/80 h-full flex flex-col justify-between">
                <!-- Main Swiper for Large Image -->
            <div class="swiper-container main-swiper flex-1">
                <div class="swiper-wrapper">
                    {% for media in product.media %}
                                    <div class="swiper-slide" data-media-id="{{ media.id }}">

                            <div class="h-[40vw]  overflow-hidden">
                                {% render 'product-media', media: media %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Thumbnails Swiper -->
            <div class="swiper-container thumb-swiper mt-4 px-10">
                <div class="swiper-wrapper">
                    {% for media in product.media%}
                        <div class="swiper-slide cursor-pointer">
                            <div class="h-full w-full ">
                                {% render 'product-media', media: media %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
            </div>
            
        </div>
      
        <div class="product--information sticky top-5 p-2">
            {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
                <input type="hidden" name="id" value="{{ selected_variant.id }}">

                {% for block in section.blocks %}
                    {% case block.type %}
                        {% when 'vendor' %}
                            <div class="my-3">
                                <span class="uppercase text-xs text-gray-500">{{ product.vendor }}</span>
                            </div>
                        {% when 'title' %}
                            <div class="my-3">
                                <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
                                
                            </div>
                            
                            <div class="my-3">
                                <!-- Start of Judge.me code --> 
                                <div class='jdgm-widget jdgm-preview-badge' data-id='{{ product.id }}'> 
                                    {{ product.metafields.judgeme.badge }} 
                                </div> 
                                <!-- End of Judge.me code -->

                            
                            </div>
                        {% when 'price' %}
                            <div class="my-3 font-bold" id="price-{{ section.id }}">
                                <span class="text-base text-gray-500 line-through">{{ selected_variant.compare_at_price | money }}</span>
                                <span class="text-2xl text-gray-900">{{ selected_variant.price | money }}</span>

                                {% if selected_variant.price < selected_variant.compare_at_price %}
                                    <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
                                {% endif %}
                            </div>
                        {% when 'variant_selector' %}
                                <div class="my-3">
                                    {% unless product.has_only_default_variant %}
                                        <variant-selector data-url="{{ product.url}}" data-section="{{ section.id }}">
                                            {% for option in product.options_with_values %}
                                                <div class="my-3">
                                                    <div class="variant-options">
                                                        {% for value in option.values %}
                                                            <label 
                                                                for="Option-{{ section.id }}-{{ forloop.index0 }}-{{ value | escape }}" 
                                                                class="variant-label"
                                                            >
                                                                <input 
                                                                    type="radio" 
                                                                    name="options[{{ option.name | escape }}]" 
                                                                    id="Option-{{ section.id }}-{{ forloop.index0 }}-{{ value | escape }}" 
                                                                    value="{{ value | escape }}"
                                                                    {% if option.selected_value == value %}
                                                                        checked
                                                                    {% endif %}
                                                                    onclick="this.closest('variant-selector').onVariantChange();"
                                                                    hidden
                                                                >
                                                                <span class="variant-text">{{ value }}</span>
                                                            </label>
                                                        {% endfor %}
                                                    </div>

                                                    <script type="application/json">
                                                        {{ product.variants | json }}
                                                    </script>
                                                </div>
                                            {% endfor %}
                                        </variant-selector>
                                    {% endunless %}
                                </div>
                                        {% when 'checkout_buttons' %}
                            <div class="my-3">
                                <button type="submit" name="add" class="w-1/2 px-6 py-4 bg-[#ff3232] text-white uppercase  font-bold  tracking-wide text-md md:text-xl hover:bg-opacity-70 rounded-2xl my-2"
                                    {% if selected_variant.available == false %}
                                        disabled
                                    {% endif %}
                                >
                                    {% if selected_variant.available == false %}
                                        Sold out
                                    {% else %}
                                        Add to cart
                                    {% endif %}
                                </button>
                            </div>
                            
                        {% when 'quantity' %}
                            <div class="my-3">
                            <label for="Quantity-{{ section.id }}">Quantity</label>

                            <div class="my-2 flex items-center justify-center w-1/4">
                                <button 
                                    type="button" 
                                    class="  text-gray-900 font-bold text-lg h-7 w-10 md:h-9 md:w-9 rounded-full border-2 flex items-center justify-center border-black opacity-85 hover:border-gray-400" 
                                    onclick="changeQuantity(-1)"
                                >
                                    -
                                </button>
                                <input 
                                    type="number" 
                                    name="quantity" 
                                    id="Quantity-{{ section.id }}" 
                                    value="1" 
                                    min="1" 
                                    class="w-1/2 py-3 text-center text-3xl md:text-4xl font-semibold bg-transparent"
                                    readonly
                                >
                                <button 
                                    type="button" 
                                    class="  text-gray-900 font-bold  text-lg h-7 w-10  md:h-9 md:w-9 rounded-full border-2 flex items-center justify-center border-black opacity-85 hover:border-gray-400" 
                                    onclick="changeQuantity(1)"
                                >
                                    +
                                </button>
                            </div>
                        </div>
                        {% when 'description' %}
                            <div class="my-3">
                                {% if product.description contains '<!--SPLIT-->' %}
                                    <p class="text-gray-700 ">{{ product.description | split: '<!--SPLIT-->' |  first}}</p>
                                    <button
                                        type="button" 
                                        class="flex items-center justify-center underline  py-2 rounded-lg text-md font-semibold cursor-pointer mt-4 opacity-50"
                                        x-on:click="showMoreInfo = true"
                                        x-show="!showMoreInfo"
                                    >
                                        Read more 
                                        <span class="mt-1 mx-1">
                                            {% render 'icon-chevron-down' %}
                                        </span>
                                    </button>
                                    <!-- Hidden div for more info -->
                                    <div
                                        class="text-gray-700 mt-2" 
                                        x-show="showMoreInfo" 
                                        x-on:click.away="showMoreInfo = false"
                                        x-transition 
                                    >
                                        <hr>
                                        {{ product.description | split: '<!--SPLIT-->' | last }}
                                        <button 
                                            type="button"
                                            class="flex items-center justify-center underline cursor-pointer mt-2 font-semibold opacity-50" 
                                            x-on:click="showMoreInfo = false"
                                        >
                                            See less
                                            <span class="mt-1 mx-1">
                                            {% render 'icon-chevron-up' %}
                                        </span>
                                        </button>
                                 </div>
                                 {% else %}
                                    <p class="text-gray-700 ">{{ product.description}}</p>
                                {% endif %}
                                
                            </div>
                                
                      
                        {% else %}
                            
                    {% endcase %}
                {% endfor %}
            {% endform %}
            {% comment %} Delivery Button and Share option {% endcomment %}
            <div class="flex flex-col uppercase max-w-xl my-3">
                <button @click="showDelivery = !showDelivery" class="flex justify-between items-center">
                     <h3 class="text-gray-700 font-bold uppercase">Delivery</h3>
                     
                        <span class="px-10 font-bold text-xl" x-text="showDelivery ? '-' : '+'"  >
                        </span>
                     
                </button>
                <p x-show="showDelivery" x-cloak class="text-red-600 pr-8 md:px-0">Free UK mainland delivery for orders over £50.00</p>
                {% comment %} Share Social Icons {% endcomment %}
                <!-- Share Social Icons -->
                <div class="flex items-center mt-6">
                    <h3 class="text-gray-700 font-bold mr-4">Share:</h3>
                    <div class="flex space-x-4">
                        <!-- Twitter -->
                        <a href="https://twitter.com/intent/tweet?url={{ shop.url }}{{ product.url | url_escape }}" target="_blank" class="text-gray-600 hover:text-gray-800">
                            {% render 'icon-twitter' %}
                        </a>
                        <!-- Instagram -->
                        <a href="https://www.instagram.com" target="_blank" class="text-gray-600 hover:text-gray-800">
                            {% render 'icon-instagram' %}
                        </a>
                        <!-- Facebook -->
                        <a href="https://www.facebook.com/sharer/sharer.php?u={{ shop.url }}{{ product.url | url_escape }}" target="_blank" class="text-gray-600 hover:text-gray-800">
                            <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="20" height="20" viewBox="0,0,256,256">
                                <g fill="none" fill-rule="nonzero" stroke="none" stroke-width="1" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0" font-family="none" font-weight="none" font-size="none" text-anchor="none" style="mix-blend-mode: normal"><g transform="scale(5.33333,5.33333)"><path d="M24,5c-10.49341,0 -19,8.50659 -19,19c0,10.49341 8.50659,19 19,19c10.49341,0 19,-8.50659 19,-19c0,-10.49341 -8.50659,-19 -19,-19z" fill="black"></path><path d="M26.572,29.036h4.917l0.772,-4.995h-5.69v-2.73c0,-2.075 0.678,-3.915 2.619,-3.915h3.119v-4.359c-0.548,-0.074 -1.707,-0.236 -3.897,-0.236c-4.573,0 -7.254,2.415 -7.254,7.917v3.323h-4.701v4.995h4.701v13.729c0.931,0.14 1.874,0.235 2.842,0.235c0.875,0 1.729,-0.08 2.572,-0.194z" fill="white"></path></g></g>
                            </svg>
                        </a>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <!-- Related Products Section -->
        <div class="my-12 ">
            <h2 class="text-center text-2xl font-bold text-gray-700 mb-6">Related Products</h2>
            <div class="flex justify-center space-x-4">
                {% assign all_products = collections.all.products |  reverse %}
                {% for product in all_products  limit: 3%}
                    {% unless product.id == current_product.id %}
                        <div class="text-center">
                            <a href="{{ product.url }}">
                                <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}" class="w-28 h-28 md:w-48 md:h-48 object-cover mx-auto mb-2 shadow-sm transition duration-1000 hover:scale-105">
                                <p class="text-gray-600 font-semibold">{{ product.title |  truncatewords: 2 }}</p>
                            </a>
                        </div>
                    {% endunless %}    
                {% endfor %}
            </div>
        </div>
        <div class="mt-10">
            <!-- Start of Judge.me code --> 
        <div style='clear:both'></div> 
        <div id='judgeme_product_reviews' class='jdgm-widget jdgm-review-widget' data-id='{{ product.id }}' > 
            {{ product.metafields.judgeme.widget }} 
        </div> 
        <!-- End of Judge.me code -->

        </div>
        </div>


<script>
    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange);
        }

        onVariantChange() {
    this.getSelectedOptions();
    this.getSelectedVariant();

    if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
        this.updateMainImage();  // New function to update image
    }
}

updateMainImage() {
    if (this.currentVariant && this.currentVariant.featured_media) {
        const mainSwiper = document.querySelector('.main-swiper .swiper-wrapper');
        const slides = Array.from(mainSwiper.querySelectorAll('.swiper-slide'));

        // Find the corresponding slide for the variant's featured image
        slides.forEach(slide => {
            if (slide.dataset.mediaId == this.currentVariant.featured_media.id) {
                const swiperInstance = document.querySelector('.main-swiper').swiper;
                const slideIndex = slides.indexOf(slide);

                // Update the swiper to display the selected variant's image
                swiperInstance.slideTo(slideIndex);
            }
        });
    }
}


        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll('input[type="radio"]:checked'), (radio) => radio.value);
            console.log(this.options);
        }

        getVariantJSON() {
            this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
            return this.variantData;
        }

        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find(
                (variant) => {
                    const findings = !variant.options.map(
                        (option, index) => {
                            return this.options[index] === option;
                        }
                    ).includes(false);

                    if(findings) return variant;
                }
            );

            console.log(this.currentVariant);
        }

        updateURL() {
            if(!this.currentVariant) return;
            window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
        }

        updateFormID() {
            const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
            form_input.value = this.currentVariant.id;
        }

        updatePrice() {
            fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
            .then((response) => response.text())
            .then((responseText) => {
                const id = `price-${this.dataset.section}`;
                const html = new DOMParser().parseFromString(responseText, 'text/html');

                const oldPrice = document.getElementById(id);
                const newPrice = html.getElementById(id);

                if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
            });
        }
    }

    customElements.define("variant-selector", VariantSelector);
</script>

<script>
    function changeQuantity(amount) {
        const quantityInput = document.querySelector('input[name="quantity"]');
        const currentValue = parseInt(quantityInput.value);

        const newValue = currentValue + amount;

        // Ensure the new value is at least 1
        if (newValue >= 1) {
            quantityInput.value = newValue;
        }
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    try {
        const thumbSwiper = new Swiper('.thumb-swiper', {
            spaceBetween: 10,
            slidesPerView: 4, // Adjust number of thumbnails visible
            freeMode: true,
            watchSlidesProgress: true,
            breakpoints: {
                640: {
                    slidesPerView: 4,
                },
                320: {
                    slidesPerView: 3,
                }
            }
        });

        const mainSwiper = new Swiper('.main-swiper', {
            spaceBetween: 10,
            effect: 'fade', // Optional: Adds fade transition effect
            fadeEffect: {
                crossFade: true, // Enables cross-fade transition
            },
            loop: true, // Optional: Enables loop mode
            thumbs: {
                swiper: thumbSwiper
            }
        });
    } catch(e) {
        console.log('SwiperJS is not defined')
    }
});

</script>



{% schema %}
{
    "name": "Product",
    "blocks": [
        {
            "type": "vendor",
            "name": "Vendor",
            "limit": 1
        },
        {
            "type": "title",
            "name": "Title",
            "limit": 1
        },
    
        {
            "type": "price",
            "name": "Price",
            "limit": 1
        },
        {
            "type": "variant_selector",
            "name": "Variant Selector",
            "limit": 1
        },
        {
            "type": "quantity",
            "name": "Quantity",
            "limit": 1
        },
        {
            "type": "description",
            "name": "Description",
            "limit": 1
        },
        {
            "type": "checkout_buttons",
            "name": "Checkout Buttons",
            "limit": 1
        }
    ]
}
{% endschema %}